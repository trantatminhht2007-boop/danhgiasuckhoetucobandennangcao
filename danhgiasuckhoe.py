import streamlit as st

def basic_health_assessment():
    st.header("ƒê√°nh gi√° S·ª©c kh·ªèe C∆° b·∫£n")

    sleep_hours = st.number_input("S·ªë gi·ªù ng·ªß", min_value=0.0, max_value=24.0)
    weight = st.number_input("C√¢n n·∫∑ng (kg)", min_value=1.0)
    height_in_meters = st.number_input("Chi·ªÅu cao (m)", min_value=0.5)
    calories_in = st.number_input("Calories n·∫°p trong 1 ng√†y")
    calories_out = st.number_input("Calories ti√™u th·ª• trong 1 ng√†y")
    meal_per_day = st.number_input("S·ªë b·ªØa ƒÉn trong ng√†y", min_value=1.0)
    huyet_ap = st.text_input("Huy·∫øt √°p (T√¢m thu/T√¢m tr∆∞∆°ng, v√≠ d·ª•: 120/80)")
    duong_huyet = st.number_input("ƒê∆∞·ªùng huy·∫øt (mg/dL)")
    mo_mau = st.selectbox("T√¨nh tr·∫°ng m·ª° m√°u", ["1:L√Ω t∆∞·ªüng", "2:Bi√™n gi·ªõi", "3:R·ªßi ro cao"])
    tinh_trang_dinh_duong = st.selectbox("T√¨nh tr·∫°ng Dinh d∆∞·ª°ng", ["1:B√¨nh th∆∞·ªùng", "2:Th·ª´a c√¢n", "3:B√©o ph√¨", "4:Thi·∫øu c√¢n"])
    suc_khoe_co_bap = st.selectbox("S·ª©c kh·ªèe C∆° b·∫Øp", ["1:Xu·∫•t s·∫Øc", "2:T·ªët", "3:C·∫ßn c·∫£i thi·ªán"])
    hieu_suat = st.selectbox("Hi·ªáu su·∫•t H·ªçc t·∫≠p/L√†m vi·ªác", ["1:T·ªët", "2:B√¨nh th∆∞·ªùng", "3:K√©m"])
    giai_tri = st.selectbox("Kh·∫£ nƒÉng Gi·∫£i tr√≠", ["1:T·ªët", "2:B√¨nh th∆∞·ªùng", "3:K√©m"])

    basic_scores = 0

    # Gi·∫•c ng·ªß
    if 7 <= sleep_hours <= 9:
        basic_scores += 7
    elif 6 <= sleep_hours < 7 or 9 < sleep_hours <= 10:
        basic_scores += 4
    elif 5 <= sleep_hours < 6 or 10 < sleep_hours <= 11:
        basic_scores += 2
    elif 4 <= sleep_hours < 5:
        basic_scores += 1

    # BMI
    BMI = weight / height_in_meters ** 2
    st.metric("Ch·ªâ s·ªë BMI", round(BMI, 2))
    if BMI < 18.5:
        basic_scores += 3
    elif 18.5 <= BMI <= 24.9:
        basic_scores += 6
    elif 25 <= BMI <= 29.9:
        basic_scores += 1

    # CICO
    CICO = calories_in - calories_out
    if -100 <= CICO <= 100:
        basic_scores += 7
    elif -300 <= CICO < -100 or 100 < CICO <= 300:
        basic_scores += 5
    elif -500 <= CICO < -300 or 300 < CICO <= 500:
        basic_scores += 3

    # S·ªë b·ªØa ƒÉn
    if 3 <= meal_per_day <= 5:
        basic_scores += 2

    # Huy·∫øt √°p
    try:
        tam_thu, tam_truong = map(int, huyet_ap.split("/"))
        if tam_thu < 120 and tam_truong < 80:
            basic_scores += 7
        elif 120 <= tam_thu < 130 and 60 <= tam_truong <= 80:
            basic_scores += 5
        elif 130 <= tam_thu <= 139 or 80 <= tam_truong <= 89:
            basic_scores += 3
    except:
        st.warning("Huy·∫øt √°p kh√¥ng h·ª£p l·ªá")

    # ƒê∆∞·ªùng huy·∫øt
    if 70 <= duong_huyet < 100:
        basic_scores += 5
    elif 100 <= duong_huyet <= 125:
        basic_scores += 2

    # M·ª° m√°u
    if mo_mau.startswith("1"):
        basic_scores += 4
    elif mo_mau.startswith("2"):
        basic_scores += 2

    # S·ª©c kh·ªèe c∆° b·∫Øp
    if suc_khoe_co_bap.startswith("1"):
        basic_scores += 3
    elif suc_khoe_co_bap.startswith("2"):
        basic_scores += 2

    # Hi·ªáu su·∫•t
    if hieu_suat.startswith("1"):
        basic_scores += 6
    elif hieu_suat.startswith("2"):
        basic_scores += 4
    else:
        basic_scores += 2

    # Gi·∫£i tr√≠
    if giai_tri.startswith("1"):
        basic_scores += 4
    elif giai_tri.startswith("2"):
        basic_scores += 2

    return basic_scores

def advanced_health_assessment():
    st.header("ƒê√°nh gi√° S·ª©c kh·ªèe N√¢ng cao")
    age = st.number_input("Tu·ªïi", min_value=0)
    if age < 18:
        if age <= 5:
            criteria = ['Ti√™m ch·ªßng ƒë·∫ßy ƒë·ªß', 'TƒÉng tr∆∞·ªüng & ph√°t tri·ªÉn', 'Ng·ªß ngh·ªâ h·ª£p l√Ω', 'Ph√°t tri·ªÉn v·∫≠n ƒë·ªông/ng√¥n ng·ªØ']
        elif age <= 12:
            criteria = ['Ho·∫°t ƒë·ªông th·ªÉ ch·∫•t', 'ƒÇn u·ªëng l√†nh m·∫°nh', 'S·ª©c kh·ªèe rƒÉng mi·ªáng', 'Ng·ªß ƒë·ªß 9‚Äì11 gi·ªù/ng√†y']
        else:
            criteria = ['Ph√°t tri·ªÉn th·ªÉ ch·∫•t', 'T·∫≠p th·ªÉ d·ª•c', 'Qu·∫£n l√Ω stress h·ªçc t·∫≠p', 'Th√≥i quen sinh ho·∫°t', 'Ch·∫ø ƒë·ªô ƒÉn c√¢n b·∫±ng', 'Ng·ªß ƒë·ªß 8‚Äì10 gi·ªù/ng√†y']
    else:
        gender = st.selectbox("Gi·ªõi t√≠nh", ["Nam", "N·ªØ"])
        if gender == "Nam":
            if 18 <= age < 30:
                criteria = ['Ti√™m ch·ªßng', 'Ho·∫°t ƒë·ªông th·ªÉ ch·∫•t', 'ƒÇn u·ªëng l√†nh m·∫°nh', 'M·ª©c ƒë·ªô h√∫t thu·ªëc', 'S·ª©c kh·ªèe t√¢m th·∫ßn']
            elif 30 <= age < 50:
                criteria = ['T·ªëc ƒë·ªô chuy·ªÉn h√≥a', 'Qu·∫£n l√Ω cƒÉng th·∫≥ng', 'Ho·∫°t ƒë·ªông th·ªÉ ch·∫•t']
            elif 50 <= age < 69:
                criteria = ['T·∫ßm so√°t ung th∆∞ ƒë·∫°i tr√†ng', 'T·∫ßm so√°t ti·ªÅn li·ªát tuy·∫øn', 'T·∫ßm so√°t tim m·∫°ch']
            else:
                criteria = ['Th√≠nh gi√°c', 'Th·ªã l·ª±c', 'M·∫≠t ƒë·ªô x∆∞∆°ng', 'Tr√≠ nh·ªõ', 'Tr·∫ßm c·∫£m']
        else:
            if 18 <= age < 30:
                criteria = ['Kh√°m ph·ª• khoa', 'Pap smear', 'Tr√°nh thai an to√†n', 'Ki·ªÉm tra huy·∫øt √°p', 'Qu·∫£n l√Ω stress', 'T·ª± ki·ªÉm tra v√∫']
            elif 30 <= age < 45:
                criteria = ['T·∫ßm so√°t c·ªï t·ª≠ cung', 'T·∫ßm so√°t ung th∆∞ v√∫', 'B·ªï sung Axit Folic']
            elif 45 <= age < 60:
                criteria = ['Ch·ª•p nh≈© ·∫£nh', 'T·∫ßm so√°t ƒë·∫°i tr√†ng', 'B·ªï sung Canxi v√† Vitamin D']
            else:
                criteria = ['DEXA scan', 'Th·ªã l·ª±c', 'ThƒÉng b·∫±ng', 'Suy gi·∫£m nh·∫≠n th·ª©c', 'Tr·∫ßm c·∫£m']

    total = 0
    for c in criteria:
        score = st.slider(f"ƒê√°nh gi√° '{c}'", 0.0, 10.0, 5.0)
        total += score
    return total / len(criteria)

# Main App
st.title("·ª®ng d·ª•ng ƒê√°nh gi√° S·ª©c kh·ªèe")

basic_score = basic_health_assessment()
st.subheader(f"ƒêi·ªÉm s·ª©c kh·ªèe c∆° b·∫£n (thang 10): {round(basic_score/5, 2)}")

if st.checkbox("ƒê√°nh gi√° th√™m s·ª©c kh·ªèe n√¢ng cao"):
    advanced_score = advanced_health_assessment()
    total_score = basic_score + advanced_score * 5
    st.subheader(f"ƒêi·ªÉm s·ª©c kh·ªèe t·ªïng th·ªÉ (thang 100): {round(total_score, 2)}")

    if total_score >= 90:
        st.success("üí™ S·ª©c kh·ªèe r·∫•t t·ªët!")
    elif 70 <= total_score < 90:
        st.info("üôÇ S·ª©c kh·ªèe t·ªët.")
    elif 50 <= total_score < 70:
        st.warning("üòê S·ª©c kh·ªèe trung b√¨nh.")
    elif 30 <= total_score < 50:
        st.error("‚ö†Ô∏è S·ª©c kh·ªèe k√©m.")
    else:
        st.error("üö® B·∫°n n√™n ƒëi kh√°m b√°c sƒ© ngay!")
else:
    if basic_score >= 40:
        st.success("üí™ S·ª©c kh·ªèe r·∫•t t·ªët!")
    elif 30 <= basic_score < 40:
        st.info("üôÇ S·ª©c kh·ªèe t·ªët.")
    elif 20 <= basic_score < 30:
        st.warning("üòê S·ª©c kh·ªèe trung b√¨nh.")
    elif 10 <= basic_score < 20:
        st.error("‚ö†Ô∏è S·ª©c kh·ªèe k√©m.")
    else:
        st.error("üö® B·∫°n n√™n ƒëi kh√°m b√°c sƒ© ngay!")

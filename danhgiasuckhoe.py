import streamlit as st

# ================== H√ÄM ƒê√ÅNH GI√Å S·ª®C KH·ªéE C∆† B·∫¢N ==================
def basic_health_assessment(sleep_hours, weight, height_in_meters, calories_in, calories_out,
                            meal_per_day, huyet_ap, duong_huyet, mo_mau, tinh_trang_dinh_duong,
                            suc_khoe_co_bap, hieu_suat, giai_tri):
    basic_scores = 0

    # Gi·∫•c ng·ªß
    if 7 <= sleep_hours <= 9:
        basic_scores += 7
    elif 6 <= sleep_hours < 7 or 9 < sleep_hours <= 10:
        basic_scores += 4
    elif 5 <= sleep_hours < 6 or 10 < sleep_hours <= 11:
        basic_scores += 2
    elif 4 <= sleep_hours < 5:
        basic_scores += 1

    # BMI
    BMI = weight / (height_in_meters ** 2)
    if BMI < 18.5:
        basic_scores += 3
    elif 18.5 <= BMI <= 24.9:
        basic_scores += 6
    elif 25 <= BMI <= 29.9:
        basic_scores += 1

    # CICO
    CICO = calories_in - calories_out
    if -100 <= CICO <= 100:
        basic_scores += 7
    elif -300 <= CICO < -100 or 100 < CICO <= 300:
        basic_scores += 5
    elif -500 <= CICO < -300 or 300 < CICO <= 500:
        basic_scores += 3

    # S·ªë b·ªØa ƒÉn
    if 3 <= meal_per_day <= 5:
        basic_scores += 2

    # Huy·∫øt √°p
    try:
        tam_thu, tam_truong = map(int, huyet_ap.split("/"))
    except:
        tam_thu, tam_truong = 120, 80
    if tam_thu < 120 and tam_truong < 80:
        basic_scores += 7
    elif 120 <= tam_thu < 130 and tam_truong < 80:
        basic_scores += 5
    elif 130 <= tam_thu <= 139 or 80 <= tam_truong <= 89:
        basic_scores += 3

    # ƒê∆∞·ªùng huy·∫øt
    if 70 <= duong_huyet < 100:
        basic_scores += 5
    elif 100 <= duong_huyet <= 125:
        basic_scores += 2

    # M·ª° m√°u
    if mo_mau == "1":
        basic_scores += 4
    elif mo_mau == "2":
        basic_scores += 2

    # S·ª©c kh·ªèe c∆° b·∫Øp
    if suc_khoe_co_bap == "1":
        basic_scores += 3
    elif suc_khoe_co_bap == "2":
        basic_scores += 2

    # Hi·ªáu su·∫•t h·ªçc t·∫≠p/l√†m vi·ªác
    if hieu_suat == "1":
        basic_scores += 6
    elif hieu_suat == "2":
        basic_scores += 4
    else:
        basic_scores += 2

    # Gi·∫£i tr√≠
    if giai_tri == "1":
        basic_scores += 4
    elif giai_tri == "2":
        basic_scores += 2

    return basic_scores, BMI, CICO


# ================== H√ÄM ƒê√ÅNH GI√Å TR·∫∫ EM ==================
def child_health_assessment(age):
    if age <= 5:
        criteria = ['Ti√™m ch·ªßng ƒë·∫ßy ƒë·ªß', 'TƒÉng tr∆∞·ªüng & ph√°t tri·ªÉn', 'Ng·ªß ngh·ªâ h·ª£p l√Ω', 'Ph√°t tri·ªÉn v·∫≠n ƒë·ªông/ng√¥n ng·ªØ']
    elif age <= 12:
        criteria = ['Ho·∫°t ƒë·ªông th·ªÉ ch·∫•t', 'ƒÇn u·ªëng l√†nh m·∫°nh', 'S·ª©c kh·ªèe rƒÉng mi·ªáng', 'Ng·ªß ƒë·ªß 9‚Äì11 gi·ªù/ng√†y']
    elif age <= 18:
        criteria = ['Ph√°t tri·ªÉn th·ªÉ ch·∫•t', 'T·∫≠p th·ªÉ d·ª•c', 'Qu·∫£n l√Ω stress h·ªçc t·∫≠p',
                    'Th√≥i quen sinh ho·∫°t', 'Ch·∫ø ƒë·ªô ƒÉn c√¢n b·∫±ng', 'Ng·ªß ƒë·ªß 8‚Äì10 gi·ªù/ng√†y']
    else:
        return 0

    total = 0
    for c in criteria:
        score = st.slider(f"ƒê√°nh gi√° '{c}'", 1, 10, 5)
        total += score
    return total / len(criteria)


# ================== H√ÄM ƒê√ÅNH GI√Å NG∆Ø·ªúI L·ªöN ==================
def adult_health_assessment(age, gender):
    if gender == "Nam":
        if 18 <= age < 30:
            criteria = ['Ti√™m ch·ªßng', 'Ho·∫°t ƒë·ªông th·ªÉ ch·∫•t', 'ƒÇn u·ªëng l√†nh m·∫°nh', 'M·ª©c ƒë·ªô h√∫t thu·ªëc', 'S·ª©c kh·ªèe t√¢m th·∫ßn']
        elif 30 <= age < 50:
            criteria = ['T·ªëc ƒë·ªô chuy·ªÉn h√≥a', 'Qu·∫£n l√Ω cƒÉng th·∫≥ng', 'Ho·∫°t ƒë·ªông th·ªÉ ch·∫•t']
        elif 50 <= age < 69:
            criteria = ['T·∫ßm so√°t ung th∆∞ ƒë·∫°i tr√†ng', 'T·∫ßm so√°t ti·ªÅn li·ªát tuy·∫øn', 'T·∫ßm so√°t tim m·∫°ch']
        else:
            criteria = ['Th√≠nh gi√°c', 'Th·ªã l·ª±c', 'M·∫≠t ƒë·ªô x∆∞∆°ng', 'Tr√≠ nh·ªõ', 'Tr·∫ßm c·∫£m']
    elif gender == "N·ªØ":
        if 18 <= age < 30:
            criteria = ['Kh√°m ph·ª• khoa', 'Pap smear', 'Tr√°nh thai an to√†n',
                        'Ki·ªÉm tra huy·∫øt √°p', 'Qu·∫£n l√Ω stress', 'T·ª± ki·ªÉm tra v√∫']
        elif 30 <= age < 45:
            criteria = ['T·∫ßm so√°t c·ªï t·ª≠ cung', 'T·∫ßm so√°t ung th∆∞ v√∫', 'B·ªï sung Axit Folic']
        elif 45 <= age < 60:
            criteria = ['Ch·ª•p nh≈© ·∫£nh', 'T·∫ßm so√°t ƒë·∫°i tr√†ng', 'B·ªï sung Canxi v√† Vitamin D']
        else:
            criteria = ['DEXA scan', 'Th·ªã l·ª±c', 'ThƒÉng b·∫±ng', 'Suy gi·∫£m nh·∫≠n th·ª©c', 'Tr·∫ßm c·∫£m']
    else:
        st.error("Gi·ªõi t√≠nh kh√¥ng h·ª£p l·ªá.")
        return 0

    total = 0
    for c in criteria:
        score = st.slider(f"ƒê√°nh gi√° '{c}'", 1, 10, 5)
        total += score
    return total / len(criteria)


# ================== H√ÄM ƒê√ÅNH GI√Å N√ÇNG CAO ==================
def advanced_health_assessment():
    age = st.number_input("Tu·ªïi", min_value=1, max_value=120, step=1)
    if age < 18:
        return child_health_assessment(age)
    else:
        gender = st.radio("Gi·ªõi t√≠nh", ["Nam", "N·ªØ"])
        return adult_health_assessment(age, gender)


# ================== GIAO DI·ªÜN STREAMLIT ==================
st.set_page_config(page_title="·ª®ng d·ª•ng ƒê√°nh gi√° S·ª©c kh·ªèe", layout="wide")
st.title("ü©∫ ·ª®ng d·ª•ng ƒê√°nh gi√° S·ª©c kh·ªèe To√†n di·ªán (Theo thang ƒëi·ªÉm) ")

tab1, tab2 = st.tabs(["ƒê√°nh gi√° C∆° b·∫£n", "ƒê√°nh gi√° N√¢ng cao"])

# TAB 1: ƒê√ÅNH GI√Å C∆† B·∫¢N
with tab1:
    st.header("üìä ƒê√°nh gi√° s·ª©c kh·ªèe c∆° b·∫£n")

    sleep_hours = st.number_input("S·ªë gi·ªù ng·ªß", 0.0, 24.0, 7.0)
    weight = st.number_input("C√¢n n·∫∑ng (kg)", 10.0, 200.0, 60.0)
    height_in_meters = st.number_input("Chi·ªÅu cao (m)", 0.5, 2.5, 1.7)
    calories_in = st.number_input("Calories n·∫°p trong 1 ng√†y", 0.0, 10000.0, 2000.0)
    calories_out = st.number_input("Calories ti√™u th·ª• trong 1 ng√†y", 0.0, 10000.0, 2000.0)
    meal_per_day = st.number_input("S·ªë b·ªØa ƒÉn trong ng√†y", 1.0, 10.0, 3.0)
    huyet_ap = st.text_input("Huy·∫øt √°p (v√≠ d·ª•: 120/80)", "120/80")
    duong_huyet = st.number_input("ƒê∆∞·ªùng huy·∫øt (mg/dL)", 50.0, 300.0, 90.0)
    mo_mau = st.radio("T√¨nh tr·∫°ng m·ª° m√°u", ["1", "2", "3"])
    tinh_trang_dinh_duong = st.radio("T√¨nh tr·∫°ng Dinh d∆∞·ª°ng", ["1", "2", "3", "4"])
    suc_khoe_co_bap = st.radio("S·ª©c kh·ªèe C∆° b·∫Øp", ["1", "2", "3"])
    hieu_suat = st.radio("Hi·ªáu su·∫•t H·ªçc t·∫≠p/L√†m vi·ªác", ["1", "2", "3"])
    giai_tri = st.radio("Kh·∫£ nƒÉng Gi·∫£i tr√≠", ["1", "2", "3"])

    if st.button("ƒê√°nh gi√° C∆° b·∫£n"):
        basic_score, BMI, CICO = basic_health_assessment(
            sleep_hours, weight, height_in_meters, calories_in, calories_out,
            meal_per_day, huyet_ap, duong_huyet, mo_mau,
            tinh_trang_dinh_duong, suc_khoe_co_bap, hieu_suat, giai_tri
        )
        st.success(f"ƒêi·ªÉm s·ª©c kh·ªèe c∆° b·∫£n (thang 10): {round(basic_score/5,2)}")
        st.write(f"- **BMI:** {round(BMI,2)}")
        st.write(f"- **C√¢n b·∫±ng nƒÉng l∆∞·ª£ng (CICO):** {CICO} kcal")

# TAB 2: ƒê√ÅNH GI√Å N√ÇNG CAO
with tab2:
    st.header("üîç ƒê√°nh gi√° s·ª©c kh·ªèe n√¢ng cao")
    adv_score = advanced_health_assessment()

    if st.button("ƒê√°nh gi√° N√¢ng cao"):
        st.success(f"ƒêi·ªÉm n√¢ng cao (thang 10): {round(adv_score,2)}")
